# -*- coding: utf-8 -*-
"""KISS_COUNT

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ufguZvd4npOxeDDl8sO92Z7OXCLpIHwP
"""

# Path setting
import os
from google.colab import drive
drive.mount('/content/drive')
os.chdir('/content/drive/My Drive/KISS_COUNT')
os.listdir()

import pandas as pd
import numpy as np
from scipy.stats import pearsonr, t

# 讀取 Excel 檔案
file_path = 'DATA_Kiss_count_gender_and_IQ.xlsx'  # 確保這個檔案存在於你設定的目錄中
df = pd.read_excel(file_path)

# 顯示所有欄位名稱確認
print("原始欄位名稱：", df.columns.tolist())

# 選取需要的欄位
columns = ['Gender', 'IQ', 'Kiss Count', 'Age of First Kiss']
data = df[columns].copy()

# 將 Gender 資料轉換：male → 1, female → 0
data['Gender'] = data['Gender'].map({'male': 1, 'female': 0})

# 顯示轉換後的資料
#print(data.head())
print(data)

variables = data.columns.tolist()

# 建立結果儲存用的 DataFrame
results = []

# 計算兩兩相關
n = len(data)
for i in range(len(variables)):
    for j in range(i+1, len(variables)):
        var1 = variables[i]
        var2 = variables[j]
        x = data[var1]
        y = data[var2]

        # 計算 r 值與 p 值
        r, p = pearsonr(x, y)

        # 計算 t 值 (t = r * sqrt(n - 2) / sqrt(1 - r^2))
        if abs(r) != 1:
            t_val = r * np.sqrt(n - 2) / np.sqrt(1 - r**2)
        else:
            t_val = np.inf  # 完美相關時 t 無窮大

        results.append({
            'Variable 1': var1,
            'Variable 2': var2,
            'r-value': r,
            't-value': t_val,
            'p-value': p
        })

# 轉為 DataFrame 顯示
result_df = pd.DataFrame(results)
print(result_df)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# 設定隨機種子以確保可重現性
np.random.seed(42)

# 分層抽樣：從每個 Gender 各隨機抽樣幾筆
male_sample = data[data['Gender'] == 1].sample(n=8)
female_sample = data[data['Gender'] == 0].sample(n=7)
sample_data = pd.concat([male_sample, female_sample]).sample(frac=1).reset_index(drop=True)

# ✅ 把 Gender 數字轉回文字
sample_data['Gender'] = sample_data['Gender'].map({1: 'male', 0: 'female'})

# 繪製表格圖片
plt.figure(figsize=(12, 1 + len(sample_data) * 0.5))
plt.axis('off')
plt.title("Random Sample of 15 Participants (with Gender)", fontsize=14, weight='bold')

table = plt.table(
    cellText=sample_data.values,
    colLabels=sample_data.columns,
    loc='center',
    cellLoc='center',
    colLoc='center'
)

table.scale(1, 1.5)
plt.tight_layout()
plt.savefig("sample_table.png", dpi=300)
plt.show()





